<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Enable the method security to use the @PreAuthorize, @PreFilter, @PostAuthorize 
		and @PostFilter annotations in methods and secure it. -->
	<global-method-security pre-post-annotations="enabled" />
	<http pattern="/login" security="none" />

	<context:component-scan base-package="com.comp.tasker.*" />

	<!-- Secure the applicationÂ´s urls with the specific Role -->
	<http auto-config="true" use-expressions="true" entry-point-ref="authEntryPoint">
		<intercept-url pattern="/users" access="permitAll"
			method="POST" />
		<intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/todos" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<form-login />
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="bcrypt" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="customUserDetailsService"
		class="com.comp.tasker.security.UserDetailsServiceImpl" />
	<beans:bean id="authEntryPoint" class="com.comp.tasker.security.AuthEntryPoint" />
</beans:beans>